% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/servers-string_replacements.R
\name{as_string_replacements}
\alias{as_string_replacements}
\title{Coerce lists to string_replacements}
\usage{
as_string_replacements(x, ...)
}
\arguments{
\item{x}{The object to coerce. Must be empty or be a list of named lists,
each with names "enum", "default", or "description", or names that can be
coerced to those names via \code{\link[snakecase:caseconverter]{snakecase::to_snake_case()}}. Additional names
are ignored.}

\item{...}{These dots are for future extensions and must be empty.}
}
\value{
A \code{string_replacements} as returned by \code{\link[=class_string_replacements]{class_string_replacements()}}.
}
\description{
\code{as_string_replacements()} turns an existing object into a
\code{string_replacements}. This is in contrast with
\code{\link[=class_string_replacements]{class_string_replacements()}}, which builds a \code{string_replacements} from
individual properties.
}
\examples{
as_string_replacements()
as_string_replacements(
  list(
    username = c(
      default = "demo",
      description = "Name of the user."
    ),
    port = list(
      default = "8443",
      enum = c("8443", "443")
    )
  )
)
}
\seealso{
servers object
\code{\link{as_server_variables}()},
\code{\link{as_servers}()},
\code{\link{class_server_variables}()},
\code{\link{class_servers}()},
\code{\link{class_string_replacements}()}
}
\concept{servers}
