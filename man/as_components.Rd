% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R
\name{as_components}
\alias{as_components}
\title{Coerce lists to components objects}
\usage{
as_components(x, ..., arg = caller_arg(x), call = caller_env())
}
\arguments{
\item{x}{The object to coerce. Must be empty or be a list containing a single
list named "security_schemes", or a name that can be coerced to
"security_schemes" via \code{\link[snakecase:caseconverter]{snakecase::to_snake_case()}}. Additional names are
ignored.}

\item{...}{These dots are for future extensions and must be empty.}

\item{arg}{An argument name as a string. This argument
will be mentioned in error messages as the input that is at the
origin of a problem.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}
}
\value{
A \code{components} object as returned by
\code{\link[=class_components]{class_components()}}.
}
\description{
\code{as_components()} turns an existing object into a
\code{components} object. This is in contrast with
\code{\link[=class_components]{class_components()}}, which builds a \code{components} from
individual properties.
}
\examples{
as_components()
as_components(list(
  securitySchemes = list(
    accountAuth = list(
      description = "Account JWT token",
      flows = list(
        password = list(
          scopes = list(
            Catalog = "Access all read-only content",
            Commerce = "Perform account-level transactions",
            Playback = "Allow playback of restricted content",
            Settings = "Modify account settings"
          ),
          tokenUrl = "/account/authorization"
        )
      ),
      type = "oauth2"
    ),
    profileAuth = list(
      description = "Profile JWT token",
      flows = list(
        password = list(
          scopes = list(
            Catalog = "Modify profile preferences and activity"
          ),
          tokenUrl = "/account/profile/authorization"
        )
      ),
      type = "oauth2"
    ),
    resetPasswordAuth = list(
      `in` = "header",
      name = "authorization",
      type = "apiKey"
    ),
    verifyEmailAuth = list(
      `in` = "header",
      name = "authorization",
      type = "apiKey"
    )
  )
))
}
\seealso{
\code{\link[=class_components]{class_components()}} for creating \code{components} objects.

components object
\code{\link{as_api_key_security_scheme}()},
\code{\link{as_oauth2_authorization_code_flow}()},
\code{\link{as_oauth2_implicit_flow}()},
\code{\link{as_oauth2_security_scheme}()},
\code{\link{as_oauth2_token_flow}()},
\code{\link{as_reference}()},
\code{\link{as_schema}()},
\code{\link{as_scopes}()},
\code{\link{as_security_scheme}()},
\code{\link{as_security_scheme_details}()},
\code{\link{as_security_schemes}()},
\code{\link{class_api_key_security_scheme}()},
\code{\link{class_components}()},
\code{\link{class_oauth2_authorization_code_flow}()},
\code{\link{class_oauth2_implicit_flow}()},
\code{\link{class_oauth2_security_scheme}()},
\code{\link{class_oauth2_token_flow}()},
\code{\link{class_reference}()},
\code{\link{class_schema}()},
\code{\link{class_scopes}()},
\code{\link{class_security_scheme_details}()},
\code{\link{class_security_schemes}()}
}
\concept{components}
